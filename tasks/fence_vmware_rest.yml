---
- name: Check minimal system version requirement
  fail:
    msg: "'fence_vmware_rest' is not present on EL6."
  when: ansible_distribution_major_version == '6'

- name: Check if 'vm_name' variable is defined for each node
  fail:
    msg: "'vm_name' must be defined for each node and contain name or UUID of VM as seen by hypervisor."
  when: vm_name is not defined

- name: Check if 'fence_vmware_ipaddr' variable is defined
  fail:
    msg: "'fence_vmware_ipaddr' variable has to be defined and contain 'hostname' or 'IP address' of vCenter/hypervisor"
  when: fence_vmware_ipaddr is not defined

- name: Check if 'fence_vmware_login' variable is defined
  fail:
    msg: "'fence_vmware_login' variable has to be defined and contain username to vCenter or hypervisor"
  when: fence_vmware_login is not defined

- name: Check if 'fence_vmware_passwd' variable is defined
  fail:
    msg: "'fence_vmware_passwd' variable has to be defined and contain password for user {{ fence_vmware_login }}"
  when: fence_vmware_passwd is not defined

- name: Configure separate stonith devices per cluster node
  when: cluster_configure_stonith_style is not defined or cluster_configure_stonith_style == 'one-device-per-node'
  block:
    - name: Create fence_vmware_rest STONITH devices
      pcs_resource:
        name: "fence-{{ hostvars[item][cluster_hostname_fact] }}"
        resource_class: 'stonith'
        resource_type: 'fence_vmware_rest'
        options: >-
          pcmk_host_map={{ hostvars[item][cluster_hostname_fact] }}:{{ hostvars[item]['vm_name'] }};
          ipaddr={{ fence_vmware_ipaddr }}
          login={{ fence_vmware_login }}
          passwd={{ fence_vmware_passwd }}
          {{ fence_vmware_options }}
      with_items: "{{ play_hosts }}"
      run_once: true

    - name: Create fence constraints
      pcs_constraint_location:
        resource: "fence-{{ hostvars[item][cluster_hostname_fact] }}"
        node_name: "{{ hostvars[item][cluster_hostname_fact] }}"
        score: '-INFINITY'
      with_items: "{{ play_hosts }}"
      run_once: true

- name: Configure single stonith device for all nodes
  when: cluster_configure_stonith_style is defined and cluster_configure_stonith_style == 'one-device-per-cluster'
  block:
    - name: Create fence_vmware_rest STONITH device
      pcs_resource:
        name: 'fence-vmware-rest'
        resource_class: 'stonith'
        resource_type: 'fence_vmware_rest'
        options: >-
          pcmk_host_map="{% for item in groups['cluster' + rand_id + '_node_is_remote_False'] %}{{ hostvars[item][cluster_hostname_fact] }}:{{ hostvars[item]['vm_name'] }};{% endfor %}"
          ipaddr={{ fence_vmware_ipaddr }}
          login={{ fence_vmware_login }}
          passwd={{ fence_vmware_passwd }}
          {{ fence_vmware_options }}
      run_once: true
